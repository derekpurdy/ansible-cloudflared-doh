---

- name: Populate service facts
  ansible.builtin.service_facts:
  tags:
    - always
    - cloudflared

- name: "Add Cloudflare user"
  ansible.builtin.user:
    name: "{{ cloudflared_user }}"
    shell: /usr/sbin/nologin
    group: "{{ cloudflared_group }}"
  tags:
    - always
    - cloudflared

- name: "Raspberry PiOS | Install latest cloudflared (armv7h)"
  ansible.builtin.get_url:
    url: "{{ cloudflared_url_arm64 }}"
    dest: "{{ cloudflared_bin_location }}"
    mode: '0755'
    owner: "{{ cloudflared_user }}"
    group: "{{ cloudflared_group }}"
  when:
    - ansible_machine == "armv7h"
    - ansible_os_family == "Debian"
  tags:
    - always
    - update
    - cloudflared
  notify:
    - 'Restart cloudflared'

- name: "Raspberry PiOS | Install latest cloudflared (arm64)"
  ansible.builtin.get_url:
    url: "{{ cloudflared_url_arm64 }}"
    dest: "{{ cloudflared_bin_location }}"
    mode: '0755'
    owner: "{{ cloudflared_user }}"
    group: "{{ cloudflared_group }}"
  when:
    - ansible_machine == "aarch64"
    - ansible_os_family == "Debian"
  tags:
    - always
    - update
    - cloudflared
  notify:
    - 'Restart cloudflared service'

- name: "Create /etc/default/cloudflared"
  ansible.builtin.template:
    src: templates/cloudflared.j2
    dest: "{{ cloudflared_config_file }}"
    owner: "{{ cloudflared_user }}"
    group: "{{ cloudflared_group }}"
  tags:
    - always
    - cloudflared

- name: "Create /etc/systemd/system/cloudflared.service"
  ansible.builtin.copy:
    src: files/cloudflared.service
    dest: /etc/systemd/system/cloudflared.service
    owner: root
    group: root
  tags:
    - always
    - cloudflared
  notify:
    - 'Start and Enable cloudflared service'
